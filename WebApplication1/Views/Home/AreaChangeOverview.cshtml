@model List<WebApplication1.Data.GeoChange>

@{
    ViewData["Title"] = "Oversikt over registrerte områdeendringer";
}

<h2>Oversikt over registrerte områdeendringer</h2>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Geodata</th>
            <th>Beskrivelse</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var change in Model)
        {
            <tr>
                <td>@change.Id</td>
                <td>@change.GeoJson</td>
                <td>@change.Description</td>
            </tr>
        }
    </tbody>
</table>

<!-- Map container -->
<div id="map" style="height: 400px;"></div>

@section Scripts {
    <!-- Import Leaflet CSS and JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <script>
        // Initialize the map
        var map = L.map('map');

        // Add OpenStreetMap tile layer
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Iterate over registered changes and add them to the map
        var changes = @Html.Raw(Json.Serialize(Model));

        if (changes.length > 0) {
            var bounds = L.latLngBounds(); // Initialize bounds to fit all GeoJSON layers

            changes.forEach(function (change) {
                try {
                    // Parse GeoJSON data and add to the map
                    var geoLayer = L.geoJSON(JSON.parse(change.geoJson)).addTo(map);

                    // Extend bounds to include this layer
                    bounds.extend(geoLayer.getBounds());

                    // Bind a popup with the description
                    geoLayer.bindPopup(change.description);
                } catch (error) {
                    console.error("Kunne ikke laste Geodata for ID:", change.id, "Feil:", error);

                }
            });

            // Fit map to bounds of all layers
            map.fitBounds(bounds);
        } else {
            // Default map view if no data is present
            map.setView([60.14, 10.25], 9);
        }
    </script>
}
