@model List<WebApplication1.Models.AreaChange>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Overview";
}

<h2 class="text-center">Overview of Registered Changes</h2>

<div class="container mt-3">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>GeoJSON</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var change in Model)
            {
                <tr>
                    <td>@change.Id</td>
                    <td>@change.GeoJson</td>
                    <td>@change.Description</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="map" style="height: 400px; margin-top: 20px;"></div>

@section Scripts {
    <script>
        // Assuming a default center
        var lastCenter = [60.14, 10.25];
        var lastZoom = 9;

        // Retrieve the last submitted marker, if any
        @if (Model.Count > 0)
        {
            var lastChange = Model.Last();
            if (!string.IsNullOrEmpty(lastChange.GeoJson))
            {
                // Parse the GeoJSON coordinates for centering
                var lastChangeJson = Json.Serialize(lastChange.GeoJson);
                <text>
                        lastCenter = JSON.parse(@lastChangeJson).geometry.coordinates.reverse();
                </text>
            }
        }

                // Initialize map with last center position
                var map = L.map('map').setView(lastCenter, lastZoom);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        var changes = @Html.Raw(Json.Serialize(Model));
        changes.forEach(function (change) {
            var layer = L.geoJSON(JSON.parse(change.geoJson)).addTo(map);
            layer.bindPopup(change.description);
        });
    </script>
}

